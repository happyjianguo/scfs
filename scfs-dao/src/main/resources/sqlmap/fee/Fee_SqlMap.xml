<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scfs.dao.fee.FeeDao">
	<resultMap type="com.scfs.domain.fee.entity.Fee" id="feeQueryResultMap">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="fee_no" property="feeNo" jdbcType="VARCHAR" />
		<result column="currency_type" property="currencyType"
			jdbcType="TINYINT" />
		<result column="fee_type" property="feeType" jdbcType="TINYINT" />
		<result column="project_id" property="projectId" jdbcType="TINYINT" />
		<result column="cust_payer" property="custPayer" jdbcType="TINYINT" />
		<result column="rec_fee_spec" property="recFeeSpec" jdbcType="TINYINT" />
		<result column="rec_assist_fee_spec" property="recAssistFeeSpec"
			jdbcType="TINYINT" />
		<result column="rec_type" property="recType" jdbcType="TINYINT" />
		<result column="rec_date" property="recDate" jdbcType="DATE" />
		<result column="received_amount" property="receivedAmount"
			jdbcType="DECIMAL" />
		<result column="rec_amount" property="recAmount" jdbcType="DECIMAL" />
		<result column="provide_invoice_amount" property="provideInvoiceAmount"
			jdbcType="DECIMAL" />
		<result column="provide_invoice_type" property="provideInvoiceType"
			jdbcType="TINYINT" />
		<result column="provide_invoice_tax_rate" property="provideInvoiceTaxRate"
			jdbcType="DECIMAL" />
		<result column="rec_note" property="recNote" jdbcType="VARCHAR" />
		<result column="cust_receiver" property="custReceiver"
			jdbcType="TINYINT" />
		<result column="pay_fee_spec" property="payFeeSpec" jdbcType="TINYINT" />
		<result column="pay_assist_fee_spec" property="payAssistFeeSpec"
			jdbcType="TINYINT" />
		<result column="pay_type" property="payType" jdbcType="TINYINT" />
		<result column="pay_date" property="payDate" jdbcType="DATE" />
		<result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
		<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
		<result column="accept_invoice_amount" property="acceptInvoiceAmount"
			jdbcType="DECIMAL" />
		<result column="accept_invoice_type" property="acceptInvoiceType"
			jdbcType="TINYINT" />
		<result column="accept_invoice_tax_rate" property="acceptInvoiceTaxRate"
			jdbcType="DECIMAL" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="pay_note" property="payNote" jdbcType="VARCHAR" />
		<result column="creator_id" property="creatorId" jdbcType="INTEGER" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
		<result column="auditor" property="auditor" jdbcType="VARCHAR" />
		<result column="auditor_id" property="auditorId" jdbcType="INTEGER" />
		<result column="audit_at" property="auditAt" jdbcType="TIMESTAMP" />
		<result column="pay_print_num" property="payPrintNum" jdbcType="INTEGER" />
		<result column="rec_print_num" property="recPrintNum" jdbcType="INTEGER" />
		<result column="pay_rec_print_num" property="payRecPrintNum"
			jdbcType="INTEGER" />
		<result column="pay_id" property="payId" jdbcType="INTEGER" />
		<result column="book_date" property="bookDate" jdbcType="TIMESTAMP" />
		<result column="pay_fee_type" property="payFeeType" jdbcType="INTEGER" />
		<result column="expire_date" property="expireDate" jdbcType="DATE" />
		<result column="fund_used" property="fundUsed" jdbcType="DECIMAL" />
		<result column="deduction_type" property="deductionType"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="fee_column_list">
		id,fee_no,currency_type,fee_type,project_id,cust_payer,rec_fee_spec,rec_assist_fee_spec,rec_type,rec_date,rec_amount,provide_invoice_amount,
		provide_invoice_type,provide_invoice_tax_rate,rec_note,cust_receiver,pay_fee_spec,pay_assist_fee_spec,pay_type,
		pay_date ,pay_amount,accept_invoice_amount,
		accept_invoice_type,accept_invoice_tax_rate,pay_note,state,creator_id,creator,create_at,is_delete,paid_amount,received_amount,auditor,auditor_id,audit_at,
		pay_print_num,rec_print_num,pay_rec_print_num,pay_id,book_date,expire_date,pay_fee_type,fund_used,deduction_type
	</sql>

	<sql id="alias_fee_column_list">
		fee.id,fee.fee_no,fee.currency_type,fee.fee_type,fee.project_id,fee.cust_payer,fee.rec_fee_spec,fee.rec_assist_fee_spec,fee.rec_type,
		rec_date,
		fee.rec_amount,fee.provide_invoice_amount,fee.provide_invoice_type,fee.provide_invoice_tax_rate,fee.rec_note,fee.cust_receiver,fee.pay_fee_spec,fee.pay_assist_fee_spec,
		fee.pay_type, pay_date
		,fee.pay_amount,fee.accept_invoice_amount,fee.accept_invoice_type,fee.accept_invoice_tax_rate,fee.pay_note,fee.state,fee.creator,fee.create_at,fee.paid_amount,
		fee.received_amount,fee.pay_id,fee.book_date,fee.expire_date,fee.pay_fee_type,fee.fund_used,fee.deduction_type
	</sql>

	<select id="selectNotByCon" parameterType="com.scfs.domain.invoice.entity.InvoiceApplyManager"
		resultMap="feeQueryResultMap">
		select
		<include refid="fee_column_list" />
		from tb_fee fee
		<where>
			fee.project_id = #{projectId,jdbcType=INTEGER} AND
			fee.cust_payer =
			#{customerId,jdbcType=INTEGER} AND
			fee.provide_invoice_type =
			#{invoiceType,jdbcType=INTEGER} AND
			fee.state = 3 AND
			fee.currency_type=1 AND
			fee.provide_invoice_tax_rate =
			#{invoiceTaxRate,jdbcType=DECIMAL} AND
			fee.provide_invoice_type =
			#{invoiceType,jdbcType=INTEGER}
			<if test="applyNo != null and applyNo != '' ">
				AND fee.fee_no like CONCAT('%',#{applyNo},'%')
			</if>
			AND IFNULL(fee.provide_invoice_amount,0) != IFNULL(fee.rec_amount,0)
			AND (fee.fee_type = 1 OR fee.fee_type = 3)
		</where>
	</select>

	<!-- 定时刷新费用单，查询水单对应的信息 -->
	<select id="queryRefreshFeeInfo" parameterType="java.lang.String"
		resultType="com.scfs.domain.fi.entity.BankReceipt">
		select
		tf.project_id AS projectId,
		tf.currency_type AS currencyType,
		tf.cust_payer AS custId,
		SUM(tf.rec_amount) AS receiptAmount,
		tf.fee_no
		AS bankReceiptNo,
		tf.expire_date AS receiptDate
		from tb_fee tf
		INNER JOIN
		tb_base_project tbp on tbp.id = tf.project_id
		INNER JOIN
		tb_base_subject tbs on tbs.id = tbp.business_unit_id
		<where>
			tf.state = 3
			AND tf.is_delete = 0
			AND tf.expire_date IS NOT NULL
			<if test="expireDate != null and expireDate != null">
	  			<![CDATA[ AND tf.expire_date < #{expireDate}]]>
			</if>
			and tbs.subject_no = 'L05'
			GROUP BY
			tf.project_id,tf.currency_type,tf.cust_payer,tf.expire_date
		</where>
	</select>

	<insert id="insert" parameterType="com.scfs.domain.fee.entity.Fee"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_fee(
		fee_no,
		currency_type,
		fee_type,
		project_id,
		cust_payer,
		rec_fee_spec,
		rec_assist_fee_spec,
		rec_type,
		rec_date,
		rec_amount,
		received_amount,
		provide_invoice_amount,
		provide_invoice_type,
		provide_invoice_tax_rate,
		rec_note,
		cust_receiver,
		pay_fee_spec,
		pay_assist_fee_spec,
		pay_type,
		pay_date,
		pay_amount,
		paid_amount,
		accept_invoice_amount,
		accept_invoice_type,
		accept_invoice_tax_rate,
		state,
		pay_note,
		creator,
		creator_id,
		auditor,
		auditor_id,
		audit_at,
		pay_id,
		book_date,
		pay_fee_type,
		expire_date,
		fund_used,
		deduction_type
		)
		values(
		#{feeNo},
		#{currencyType},
		#{feeType},
		#{projectId},
		#{custPayer},
		#{recFeeSpec},
		#{recAssistFeeSpec},
		#{recType},
		#{recDate},
		IFNULL(#{recAmount},0),
		IFNULL(#{receivedAmount},0),
		IFNULL(#{provideInvoiceAmount},0),
		#{provideInvoiceType},
		#{provideInvoiceTaxRate},
		#{recNote},
		#{custReceiver},
		#{payFeeSpec},
		#{payAssistFeeSpec},
		#{payType},
		#{payDate},
		IFNULL(#{payAmount},0),
		IFNULL(#{paidAmount},0),
		IFNULL(#{acceptInvoiceAmount},0),
		#{acceptInvoiceType},
		#{acceptInvoiceTaxRate},
		#{state},
		#{payNote},
		#{creator},
		#{creatorId},
		#{auditor},
		#{auditorId},
		#{auditAt},
		#{payId},
		#{bookDate},
		#{payFeeType},
		#{expireDate},
		#{fundUsed},
		#{deductionType})
	</insert>
	<update id="updateById" parameterType="com.scfs.domain.fee.entity.Fee">
		update tb_fee
		<set>
			<if test="projectId !=null">
				project_id = #{projectId},
			</if>
			<if test="currencyType !=null">
				currency_type = #{currencyType},
			</if>
			<if test="custPayer !=null">
				cust_payer = #{custPayer},
			</if>
			<if test="recFeeSpec !=null">
				rec_fee_spec = #{recFeeSpec},
			</if>
			<if test="recAssistFeeSpec !=null">
				rec_assist_fee_spec = #{recAssistFeeSpec},
			</if>
			<if test="recType !=null">
				rec_type = #{recType},
			</if>
			<if test="recDate !=null">
				rec_date = #{recDate},
			</if>
			<if test="receivedAmount !=null">
				received_amount = #{receivedAmount},
			</if>
			<if test="recAmount !=null">
				rec_amount = #{recAmount},
			</if>
			<if test="provideInvoiceType !=null">
				provide_invoice_type = #{provideInvoiceType},
			</if>
			<if test="provideInvoiceTaxRate !=null">
				provide_invoice_tax_rate = #{provideInvoiceTaxRate},
			</if>
			<if test="recNote !=null">
				rec_note = #{recNote},
			</if>
			<if test="custReceiver !=null">
				cust_receiver = #{custReceiver},
			</if>
			<if test="provideInvoiceAmount !=null">
				provide_invoice_amount = #{provideInvoiceAmount},
			</if>
			<if test="payFeeSpec !=null">
				pay_fee_spec = #{payFeeSpec},
			</if>
			<if test="payAssistFeeSpec !=null">
				pay_assist_fee_spec = #{payAssistFeeSpec},
			</if>
			<if test="payType !=null">
				pay_type = #{payType},
			</if>
			<if test="payDate !=null">
				pay_date = #{payDate},
			</if>
			<if test="paidAmount !=null">
				paid_amount = #{paidAmount},
			</if>
			<if test="payAmount !=null">
				pay_amount = #{payAmount},
			</if>
			<if test="acceptInvoiceType !=null">
				accept_invoice_type = #{acceptInvoiceType},
			</if>
			<if test="acceptInvoiceTaxRate !=null">
				accept_invoice_tax_rate = #{acceptInvoiceTaxRate},
			</if>
			<if test="acceptInvoiceAmount !=null">
				accept_invoice_amount = #{acceptInvoiceAmount},
			</if>
			<if test="payNote !=null">
				pay_note = #{payNote},
			</if>
			<if test="state !=null">
				state = #{state},
			</if>
			<if test="auditor !=null">
				auditor = #{auditor},
			</if>
			<if test="auditorId !=null">
				auditor_id = #{auditorId},
			</if>
			<if test="auditAt !=null">
				audit_at = #{auditAt},
			</if>
			<if test="bookDate !=null">
				book_date = #{bookDate}
			</if>
			<if test="payFeeType !=null">
				pay_fee_type = #{payFeeType},
			</if>
			<if test="expireDate !=null">
				expire_date = #{expireDate}
			</if>
			<if test="fundUsed !=null">
				fund_used = #{fundUsed}
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="deleteById" parameterType="com.scfs.domain.fee.entity.Fee">
		update tb_fee
		set
		is_delete=#{isDelete} , deleter=#{deleter} , deleter_id=#{deleterId} ,
		delete_at=#{deleteAt}
		where id=#{id}
	</update>
	<update id="submitById" parameterType="com.scfs.domain.fee.entity.Fee">
		update tb_fee
		set
		state=#{state}
		where id=#{id}
	</update>
	<select id="queryFeeByCond" parameterType="com.scfs.domain.fee.dto.req.QueryFeeReqDto"
		resultMap="feeQueryResultMap">
		select
		<include refid="alias_fee_column_list" />
		from tb_fee fee
		<if test="userId != null">
			left join tb_base_user_project bup
			on fee.project_id =
			bup.project_id
		</if>
		where fee.is_delete = 0
		<if test="userId != null">
			and bup.user_id = #{userId}
			and bup.state = 1
		</if>
		<if test="feeNo != null and feeNo != ''">
			and fee.fee_No like CONCAT('%',#{feeNo},'%')
		</if>
		<if test="busiUnit != null">
			and exists (select 1 from tb_base_project a where a.id =
			fee.project_id
			and a.business_unit_id = #{busiUnit})
		</if>
		<if test="projectId !=null">
			and fee.project_id = #{projectId}
		</if>
		<if test="payFeeType !=null">
			and fee.pay_fee_type = #{payFeeType}
		</if>
		<if test="feeType !=null">
			and fee.fee_type = #{feeType}
		</if>
		<if test="custPayer !=null">
			and fee.cust_payer = #{custPayer}
		</if>
		<if test="currencyType !=null">
			and fee.currency_type = #{currencyType}
		</if>
		<if test="recFeeSpec !=null">
			and fee.rec_fee_spec = #{recFeeSpec}
		</if>
		<if test="recAssistFeeSpec !=null">
			and fee.rec_assist_fee_spec = #{recAssistFeeSpec}
		</if>
		<if test="recType !=null">
			and fee.rec_type = #{recType}
		</if>
		<if test="startRecDate !=null and startRecDate != ''">
				<![CDATA[
					and fee.rec_date >= #{startRecDate}
				]]>
		</if>
		<if test="endRecDate !=null and endRecDate != ''">
				<![CDATA[
					and fee.rec_date <= #{endRecDate}
				]]>
		</if>
		<if test="provideInvoiceType !=null">
			and fee.provide_invoice_type = #{provideInvoiceType}
		</if>

		<if test="custReceiver !=null">
			and fee.cust_receiver = #{custReceiver}
		</if>
		<if test="payFeeSpec !=null">
			and fee.pay_fee_spec = #{payFeeSpec}
		</if>
		<if test="payAssistFeeSpec !=null">
			and fee.pay_assist_fee_spec = #{payAssistFeeSpec}
		</if>
		<if test="payType !=null">
			and fee.pay_type = #{payType}
		</if>
		<if test="startPayDate !=null and startPayDate != ''">
				<![CDATA[
					and fee.pay_date >= #{startPayDate}
				]]>
		</if>
		<if test="endPayDate !=null and endPayDate != ''">
				<![CDATA[
					and fee.pay_date <= #{endPayDate}
				]]>
		</if>
		<if test="acceptInvoiceType !=null">
			and fee.accept_invoice_type = #{acceptInvoiceType}
		</if>
		<if test="state != null">
			and fee.state = #{state}
		</if>
		<if test="isPayAll != null and isPayAll == 0">
			and fee.paid_amount = pay_amount
		</if>
		<if test="isPayAll !=null and isPayAll == 1">
				<![CDATA[
					and fee.paid_amount <> pay_amount 
				]]>
		</if>
		<if test="isPayAll !=null and isPayAll == 2">
				<![CDATA[
					and fee.accept_invoice_amount < pay_amount 
				]]>
		</if>
		<if test="acceptInvoiceTaxRate != null">
			and fee.accept_invoice_tax_rate = #{acceptInvoiceTaxRate}
		</if>
		order by id desc
	</select>

	<select id="queryFeeSumByCond" parameterType="com.scfs.domain.fee.dto.req.QueryFeeReqDto"
		resultType="com.scfs.domain.fee.dto.resp.FeeSumModel">
		select sum(rec_amount) as recAmountSum , sum(received_amount) as
		receivedAmountSum , sum(provide_invoice_amount) as
		provideInvoiceAmountSum ,
		sum(pay_amount) as payAmountSum ,
		sum(paid_amount) as paidAmountSum ,
		sum(accept_invoice_amount) as
		acceptInvoiceAmountSum , currency_type
		as currencyType
		from tb_fee fee
		left join tb_base_user_project bup
		on
		fee.project_id = bup.project_id
		where fee.is_delete = 0
		<if test="userId != null">
			and bup.user_id = #{userId}
			and bup.state = 1
		</if>
		<if test="feeNo != null and feeNo != ''">
			and fee.fee_No like CONCAT('%',#{feeNo},'%')
		</if>
		<if test="busiUnit != null">
			and exists (select 1 from tb_base_project a where a.id =
			fee.project_id
			and a.business_unit_id = #{busiUnit})
		</if>
		<if test="projectId !=null">
			and fee.project_id = #{projectId}
		</if>
		<if test="feeType !=null">
			and fee.fee_type = #{feeType}
		</if>
		<if test="custPayer !=null">
			and fee.cust_payer = #{custPayer}
		</if>
		<if test="currencyType !=null">
			and fee.currency_type = #{currencyType}
		</if>
		<if test="recFeeSpec !=null">
			and fee.rec_fee_spec = #{recFeeSpec}
		</if>
		<if test="recAssistFeeSpec !=null">
			and fee.rec_assist_fee_spec = #{recAssistFeeSpec}
		</if>
		<if test="recType !=null">
			and fee.rec_type = #{recType}
		</if>
		<if test="startRecDate !=null and startRecDate != ''">
				<![CDATA[
					and fee.rec_date >= #{startRecDate}
				]]>
		</if>
		<if test="endRecDate !=null and endRecDate != ''">
				<![CDATA[
					and fee.rec_date <= #{endRecDate}
				]]>
		</if>
		<if test="provideInvoiceType !=null">
			and fee.provide_invoice_type = #{provideInvoiceType}
		</if>

		<if test="custReceiver !=null">
			and fee.cust_receiver = #{custReceiver}
		</if>
		<if test="payFeeSpec !=null">
			and fee.pay_fee_spec = #{payFeeSpec}
		</if>
		<if test="payAssistFeeSpec !=null">
			and fee.pay_assist_fee_spec = #{payAssistFeeSpec}
		</if>
		<if test="payType !=null">
			and fee.pay_type = #{payType}
		</if>
		<if test="startPayDate !=null and startPayDate != ''">
				<![CDATA[
					and fee.pay_date >= #{startPayDate}
				]]>
		</if>
		<if test="endPayDate !=null and endPayDate != ''">
				<![CDATA[
					and fee.pay_date <= #{endPayDate}
				]]>
		</if>
		<if test="acceptInvoiceType !=null">
			and fee.accept_invoice_type = #{acceptInvoiceType}
		</if>
		<if test="state != null">
			and fee.state = #{state}
		</if>
		<if test="isPayAll != null and isPayAll == 0">
			and fee.paid_amount == pay_amount
		</if>
		<if test="isPayAll !=null and isPayAll == 1">
				<![CDATA[
					and fee.paid_amount <> pay_amount 
				]]>
		</if>
		<if test="isPayAll !=null and isPayAll == 2">
				<![CDATA[
					and fee.accept_invoice_amount < pay_amount 
				]]>
		</if>
		<if test="acceptInvoiceTaxRate != null">
			and fee.accept_invoice_tax_rate = #{acceptInvoiceTaxRate}
		</if>
		group by currency_type
	</select>
	<select id="queryCountByCond" parameterType="com.scfs.domain.fee.dto.req.QueryFeeReqDto"
		resultType="java.lang.Integer">
		select
		count(1)
		from tb_fee fee
		left join tb_base_user_project bup
		on
		fee.project_id =
		bup.project_id
		where fee.is_delete = 0
		<if test="userId != null">
			and bup.user_id = #{userId}
			and bup.state = 1
		</if>
		<if test="feeNo != null and feeNo != ''">
			and fee.fee_No like CONCAT('%',#{feeNo},'%')
		</if>
		<if test="busiUnit != null">
			and exists (select 1 from tb_base_project a where a.id =
			fee.project_id
			and a.business_unit_id = #{busiUnit})
		</if>
		<if test="projectId !=null">
			and fee.project_id = #{projectId}
		</if>
		<if test="feeType !=null">
			and fee.fee_type = #{feeType}
		</if>
		<if test="custPayer !=null">
			and fee.cust_payer = #{custPayer}
		</if>
		<if test="currencyType !=null">
			and fee.currency_type = #{currencyType}
		</if>
		<if test="recFeeSpec !=null">
			and fee.rec_fee_spec = #{recFeeSpec}
		</if>
		<if test="recAssistFeeSpec !=null">
			and fee.rec_assist_fee_spec = #{recAssistFeeSpec}
		</if>
		<if test="recType !=null">
			and fee.rec_type = #{recType}
		</if>
		<if test="startRecDate !=null and startRecDate != ''">
				<![CDATA[
					and fee.rec_date >= #{startRecDate}
				]]>
		</if>
		<if test="endRecDate !=null and endRecDate != ''">
				<![CDATA[
					and fee.rec_date <= #{endRecDate}
				]]>
		</if>
		<if test="provideInvoiceType !=null">
			and fee.provide_invoice_type = #{provideInvoiceType}
		</if>

		<if test="custReceiver !=null">
			and fee.cust_receiver = #{custReceiver}
		</if>
		<if test="payFeeSpec !=null">
			and fee.pay_fee_spec = #{payFeeSpec}
		</if>
		<if test="payAssistFeeSpec !=null">
			and fee.pay_assist_fee_spec = #{payAssistFeeSpec}
		</if>
		<if test="payType !=null">
			and fee.pay_type = #{payType}
		</if>
		<if test="startPayDate !=null and startPayDate != ''">
				<![CDATA[
					and fee.pay_date >= #{startPayDate}
				]]>
		</if>
		<if test="endPayDate !=null and endPayDate != ''">
				<![CDATA[
					and fee.pay_date <= #{endPayDate}
				]]>
		</if>
		<if test="acceptInvoiceType !=null">
			and fee.accept_invoice_type = #{acceptInvoiceType}
		</if>
		<if test="state != null">
			and fee.state = #{state}
		</if>
		<if test="isPayAll != null and isPayAll == 0">
			and fee.paid_amount == pay_amount
		</if>
		<if test="isPayAll !=null and isPayAll == 1">
				<![CDATA[
					and fee.paid_amount < pay_amount 
				]]>
		</if>
		<if test="isPayAll !=null and isPayAll == 2">
				<![CDATA[
					and fee.accept_invoice_amount < pay_amount 
				]]>
		</if>
		<if test="acceptInvoiceTaxRate != null">
			and fee.accept_invoice_tax_rate = #{acceptInvoiceTaxRate}
		</if>
	</select>
	<select id="queryEntityById" parameterType="java.lang.Integer"
		resultMap="feeQueryResultMap">
		select
		<include refid="fee_column_list" />
		from tb_fee
		where id=#{id} for update
	</select>
	<update id="updatePrintNum" parameterType="com.scfs.domain.fee.entity.Fee">
		update tb_fee
		<set>
			<if test="payPrintNum != null">
				pay_print_num = #{payPrintNum,jdbcType=INTEGER},
			</if>
			<if test="recPrintNum != null">
				rec_print_num = #{recPrintNum,jdbcType=INTEGER},
			</if>
			<if test="payRecPrintNum != null">
				pay_rec_print_num = #{payRecPrintNum,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 获取应收应付费用关系 -->
	<select id="queryFeePayByNotRecCond" parameterType="com.scfs.domain.fee.dto.req.QueryFeeReqDto"
		resultMap="feeQueryResultMap">
		select
		<include refid="alias_fee_column_list" />
		from tb_fee fee
		<if test="userId != null">
			left join tb_base_user_project bup on fee.project_id =
			bup.project_id
		</if>
		where fee.is_delete = 0
		and fee.fee_type = 2
		and fee.state = 3
		AND fee.id
		NOT IN (SELECT pay_fee_id FROM tb_fee_rec_pay WHERE
		rec_fee_id=#{id}
		and is_delete = 0 )
		<if test="userId != null">
			and bup.user_id = #{userId}
			and bup.state = 1
		</if>
		<if test="feeNo != null and feeNo != ''">
			and fee.fee_No like CONCAT('%',#{feeNo},'%')
		</if>
		<if test="projectId !=null">
			and fee.project_id = #{projectId}
		</if>
	</select>

	<select id="queryFeePayByRecCond" parameterType="com.scfs.domain.fee.dto.req.QueryFeeReqDto"
		resultMap="feeQueryResultMap">
		select
		fp.id,
		fee.fee_no,fee.currency_type,fee.fee_type,fee.project_id,fee.cust_payer,fee.rec_fee_spec,fee.rec_assist_fee_spec,fee.rec_type,
		rec_date,
		fee.rec_amount,fee.provide_invoice_amount,fee.provide_invoice_type,fee.provide_invoice_tax_rate,fee.rec_note,fee.cust_receiver,fee.pay_fee_spec,fee.pay_assist_fee_spec,
		fee.pay_type, pay_date
		,fee.pay_amount,fee.accept_invoice_amount,fee.accept_invoice_type,fee.accept_invoice_tax_rate,fee.pay_note,fee.state,fee.creator,fee.create_at,fee.paid_amount,
		fee.received_amount,fee.pay_id,fee.book_date,fee.expire_date,fee.pay_fee_type,fee.fund_used,fee.deduction_type
		from tb_fee fee
		inner JOIN tb_fee_rec_pay fp ON fee.id= fp.pay_fee_id
		<if test="userId != null">
			left join tb_base_user_project bup on fee.project_id =
			bup.project_id
		</if>
		where fee.is_delete = 0
		and fee.fee_type = 2
		and fee.state = 3
		and
		fp.is_delete = 0
		<if test="id != null">
			and fp.rec_fee_id =#{id}
		</if>
		<if test="userId != null">
			and bup.user_id = #{userId}
			and bup.state = 1
		</if>
		<if test="feeNo != null and feeNo != ''">
			and fee.fee_No like CONCAT('%',#{feeNo},'%')
		</if>
		<if test="projectId !=null">
			and fee.project_id = #{projectId}
		</if>
	</select>
</mapper>