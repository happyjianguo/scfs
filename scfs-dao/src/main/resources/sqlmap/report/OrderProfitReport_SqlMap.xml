<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scfs.dao.report.OrderProfitReportDao">

	<sql id="order_profit_report_sql">
		SELECT
		*,
		(IFNULL(saleAmount, 0) + IFNULL(serviceAmount, 0) -
		IFNULL(compositeTaxAmount, 0) -
		IFNULL(purchaseCost, 0) -
		IFNULL(fundCost, 0) - IFNULL(warehouseAmount, 0) -
		IFNULL(marketAmount, 0) - IFNULL(financeAmount, 0) -
		IFNULL(manageAmount, 0) - IFNULL(manualAmount, 0)) AS profitAmount
		FROM (
		SELECT id,
		projectId,
		remark,
		warehouseId,
		bizManagerId,
		departmentId,
		customerId,
		bizType,
		orderNo,
		billNo,
		billType,
		productNo,
		taxRate,
		isHome,
		ROUND(num, 2) AS num,
		ROUND(IF(billType = 2,
		IF(subjectPayAmount &lt; 0, -1*subjectPayAmount, 0),
		serviceAmount)*exchangeRate, 2) AS serviceAmount,
		ROUND(saleAmount*exchangeRate, 2) AS saleAmount,
		ROUND(recAmount*exchangeRate, 2) AS recAmount,
		ROUND(payAmount*exchangeRate, 2) AS payAmount,
		ROUND(diffAmount*exchangeRate, 2) AS diffAmount,
		ROUND(compositeTaxAmount*exchangeRate, 2) AS compositeTaxAmount,
		ROUND(purchaseCost*exchangeRate, 2) AS purchaseCost,
		ROUND(fundCost*exchangeRate, 2) AS fundCost,
		placeDate,
		statisticsDate,
		currencyType,
		currencyEnName,
		exchangeRate,
		feeOneName,
		CASE
		WHEN billType
		= 1 OR billType = 3 OR billType = 4
		THEN 0
		WHEN (billType = 2) AND
		(feeOneName = 7 OR feeOneName = 10 OR feeOneName = 11) AND
		subjectPayAmount &gt; 0
		THEN ROUND(subjectPayAmount*exchangeRate, 2)
		WHEN (billType = 6) AND (feeOneName = 7 OR feeOneName = 10 OR
		feeOneName = 11)
		THEN ROUND(subjectPayAmount*exchangeRate, 2)
		END AS
		warehouseAmount,
		CASE
		WHEN billType = 1 OR billType = 3 OR billType = 4
		THEN 0
		WHEN (billType = 2) AND (feeOneName = 8 OR feeOneName = 9 ) AND
		subjectPayAmount &gt; 0
		THEN ROUND(subjectPayAmount*exchangeRate, 2)
		WHEN (billType = 6) AND (feeOneName = 8 OR feeOneName = 9 )
		THEN
		ROUND(subjectPayAmount*exchangeRate, 2)
		END AS marketAmount,
		CASE
		WHEN
		billType = 1 OR billType = 3 OR billType = 4
		THEN 0
		WHEN (billType = 2)
		AND (feeOneName = 14) AND subjectPayAmount &gt; 0
		THEN
		ROUND(subjectPayAmount*exchangeRate, 2)
		WHEN (billType = 6) AND
		(feeOneName = 14)
		THEN ROUND(subjectPayAmount*exchangeRate, 2)
		END AS
		financeAmount,
		CASE
		WHEN billType = 1 OR billType = 3 OR billType = 4
		THEN 0
		WHEN (billType = 2) AND (feeOneName = 12 OR feeOneName = 15 OR
		feeOneName = 16) AND subjectPayAmount &gt; 0
		THEN
		ROUND(subjectPayAmount*exchangeRate, 2)
		WHEN (billType = 6) AND
		(feeOneName = 12 OR feeOneName = 15 OR feeOneName = 16)
		THEN
		ROUND(subjectPayAmount*exchangeRate, 2)
		END AS manageAmount,
		CASE
		WHEN
		billType = 1 OR billType = 3 OR billType = 4
		THEN 0
		WHEN (billType = 2)
		AND (feeOneName = 13) AND subjectPayAmount &gt; 0
		THEN
		ROUND(subjectPayAmount*exchangeRate, 2)
		WHEN (billType = 6) AND
		(feeOneName = 13)
		THEN ROUND(subjectPayAmount*exchangeRate, 2)
		END AS
		manualAmount,
		subjectPayAmount,
		subjectAmount
		FROM (
		SELECT id,
		projectId,
		remark,
		warehouseId,
		bizManagerId,
		departmentId,
		customerId,
		bizType,
		orderNo,
		billNo,
		billType,
		productNo,
		taxRate,
		isHome,
		num,
		CASE
		WHEN billType
		= 1
		THEN recAmount
		WHEN billType = 2 OR billType = 3 OR billType = 4
		THEN 0
		END AS serviceAmount,
		saleAmount,
		recAmount,
		payAmount,
		diffAmount,
		CASE
		WHEN billType = 1
		THEN recAmount/(1+taxRate) * taxRate
		WHEN billType
		= 2
		THEN 0
		WHEN billType = 3 AND diffAmount &gt; 0
		THEN
		diffAmount/(1+taxRate) * taxRate
		WHEN billType = 3 AND diffAmount &lt;
		0
		THEN 0
		WHEN billType = 4
		THEN saleAmount/(1+taxRate) * taxRate
		END AS
		compositeTaxAmount,
		IF(billType = 3, purchaseCost,
		purchaseCost/(1+taxRate)) AS purchaseCost,
		fundCost,
		placeDate,
		statisticsDate,
		currencyType,
		currencyEnName,
		(
		SELECT MAX(tcer.cash_buying_price) FROM tb_base_exchange_rate tcer
		WHERE tcer.bank = '2' 
		AND tcer.currency = '1' 
		AND tcer.foreign_currency = result.currencyType
		AND DATE_FORMAT(tcer.create_at, '%Y-%m-%d') = DATE_FORMAT(result.statisticsDate, '%Y-%m-%d')
		)
		exchangeRate,
		(SELECT tfs.fee_one_name FROM tb_fee_spec tfs
		WHERE tfs.id
		= result.productNo) feeOneName,
		payAmount/(1+taxRate) AS
		subjectPayAmount,
		-1*diffAmount/(1+taxRate) AS subjectAmount
		FROM (

		SELECT
		tf.id,
		tf.project_id projectId,
		tf.rec_note remark,
		null AS
		warehouseId,
		tbp.biz_special_id AS bizManagerId,
		tbp.department_id AS
		departmentId,
		CASE
		WHEN tf.fee_type = 1
		THEN (SELECT tbs.id FROM
		tb_base_subject tbs WHERE tbs.id = tf.cust_payer AND tbs.subject_type
		&amp; 1 = 1)
		WHEN tf.fee_type = 2
		THEN (SELECT tbs.id FROM
		tb_base_subject tbs WHERE tbs.id = tf.cust_receiver AND
		tbs.subject_type &amp; 1 = 1)
		WHEN tf.fee_type = 3 AND
		IFNULL(tf.rec_amount, 0) &gt; IFNULL(tf.pay_amount, 0)
		THEN (SELECT
		tbs.id FROM tb_base_subject tbs WHERE tbs.id = tf.cust_payer AND
		tbs.subject_type &amp; 1 = 1)
		WHEN tf.fee_type = 3 AND
		IFNULL(tf.rec_amount, 0) &lt; IFNULL(tf.pay_amount, 0)
		THEN (SELECT
		tbs.id FROM tb_base_subject tbs WHERE tbs.id = tf.cust_receiver AND
		tbs.subject_type &amp; 1 = 1)
		END
		AS customerId,
		tbp.biz_type AS bizType,
		tf.fee_no AS orderNo,
		tf.fee_no
		AS billNo,
		CASE
		tf.fee_type
		WHEN 1
		THEN 1
		WHEN 2
		THEN 2
		WHEN 3
		THEN 3
		END AS billType,
		CASE
		WHEN tf.fee_type = 1
		THEN
		tf.rec_fee_spec
		WHEN tf.fee_type = 2
		THEN tf.pay_fee_spec
		WHEN
		tf.fee_type = 3 AND IFNULL(tf.rec_amount, 0) &gt;=
		IFNULL(tf.pay_amount, 0)
		THEN tf.rec_fee_spec
		WHEN tf.fee_type = 3 AND
		IFNULL(tf.rec_amount, 0) &lt; IFNULL(tf.pay_amount, 0)
		THEN
		tf.pay_fee_spec
		END AS productNo,
		CASE
		WHEN tf.fee_type = 1
		THEN
		IFNULL(tf.provide_invoice_tax_rate, 0)
		WHEN tf.fee_type = 2
		THEN
		IFNULL(tf.accept_invoice_tax_rate, 0)
		WHEN tf.fee_type = 3 AND
		IFNULL(tf.rec_amount, 0) &gt;= IFNULL(tf.pay_amount, 0)
		THEN
		IFNULL(tf.provide_invoice_tax_rate, 0)
		WHEN tf.fee_type = 3 AND
		IFNULL(tf.rec_amount, 0) &lt; IFNULL(tf.pay_amount, 0)
		THEN
		IFNULL(tf.accept_invoice_tax_rate, 0)
		END AS taxRate,
		(SELECT
		tfab.is_home FROM tb_fi_account_book tfab
		WHERE tfab.busi_unit =
		tbp.business_unit_id LIMIT 0, 1) isHome,
		0 AS num,
		CASE
		WHEN tf.fee_type
		= 1 OR tf.fee_type = 2
		THEN 0
		WHEN tf.fee_type = 3
		THEN
		IFNULL(tf.rec_amount, 0)
		END AS saleAmount,
		IFNULL(tf.rec_amount,
		0) AS
		recAmount,
		IFNULL(tf.pay_amount, 0) AS payAmount,
		CASE
		WHEN
		tf.fee_type =
		1 OR tf.fee_type = 2
		THEN 0
		WHEN tf.fee_type = 3
		THEN
		IFNULL(tf.rec_amount, 0) - IFNULL(tf.pay_amount, 0)
		END AS diffAmount,
		CASE
		WHEN tf.fee_type = 1 OR tf.fee_type = 2
		THEN 0
		WHEN tf.fee_type = 3
		THEN IFNULL(tf.pay_amount, 0)
		END AS purchaseCost,
		0 AS fundCost,
		tf.create_at AS placeDate,
		tf.book_date AS statisticsDate,
		tf.currency_type AS currencyType,
		CASE tf.currency_type
		WHEN 1 THEN
		'CNY'
		WHEN 2 THEN 'USD'
		WHEN 3 THEN 'HKD'
		WHEN 4 THEN 'EUR'
		END AS
		currencyEnName
		FROM
		tb_fee tf
		<if test="userId!=null">
			INNER JOIN tb_base_user_project tbup
			ON tf.project_id =
			tbup.project_id
		</if>
		INNER JOIN tb_base_project tbp
		ON tf.project_id = tbp.id
		WHERE tf.state
		= 3
		AND tf.is_delete = 0
		<if test="userId!=null">
			AND tbup.user_id = #{userId}
			AND tbup.state = 1
		</if>
		<if test="projectId!=null">
			AND tf.project_id = #{projectId}
		</if>
		<if test="businessUnitId !=null">
			AND tbp.business_unit_id = #{businessUnitId}
		</if>
		<if test="startPlaceDate!=null and startPlaceDate!=''">
			AND DATE_FORMAT(tf.create_at, '%Y-%m-%d') &gt;=
			#{startPlaceDate}
		</if>
		<if test="endPlaceDate!=null and endPlaceDate!=''">
			AND DATE_FORMAT(tf.create_at, '%Y-%m-%d') &lt;=
			#{endPlaceDate}
		</if>
		<if test="startStatisticsDate!=null and startStatisticsDate!=''">
			AND DATE_FORMAT(tf.book_date, '%Y-%m-%d') &gt;=
			#{startStatisticsDate}
		</if>
		<if test="endStatisticsDate!=null and endStatisticsDate!=''">
			AND DATE_FORMAT(tf.book_date, '%Y-%m-%d') &lt;=
			#{endStatisticsDate}
		</if>
		<if test="orderNo!=null and orderNo!=''">
			AND tf.fee_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="bizType!=null">
			AND tbp.biz_type = #{bizType}
		</if>
		<if test="bizManagerId!=null">
			AND tbp.biz_special_id = #{bizManagerId}
		</if>
		<if test="departmentId!=null">
			<foreach collection="departmentId" item="dId"
				open="AND tbp.department_id in(" separator="," close=")">
				${dId}
			</foreach>
		</if>

		UNION ALL

		SELECT
		tfm.id,
		tfm.project_id projectId,
		tfm.remark remark,
		null
		AS warehouseId,
		tbp.biz_special_id AS bizManagerId,
		tfm.department_id AS
		departmentId,
		(SELECT tbs.id FROM tb_base_subject tbs
		WHERE tbs.id =
		tfm.cust_id AND tbs.subject_type &amp; 1 = 1) AS customerId,
		tbp.biz_type AS bizType,
		tfm.fee_manage_no AS orderNo,
		tfm.fee_manage_no AS billNo,
		'6' AS billType,
		fee_spec_id AS productNo,
		0 AS taxRate,
		(SELECT tfab.is_home FROM tb_fi_account_book tfab
		WHERE
		tfab.busi_unit = tbp.business_unit_id LIMIT 0, 1) isHome,
		0 AS num,
		0
		AS
		saleAmount,
		0 AS recAmount,
		FROM_BASE64(IFNULL(tfm.amount, 0)) AS
		payAmount,
		0 AS diffAmount,
		0 AS purchaseCost,
		0 AS fundCost,
		tfm.create_at AS placeDate,
		tfm.date AS statisticsDate,
		tfm.currnecy_type AS currencyType,
		CASE tfm.currnecy_type
		WHEN 1 THEN
		'CNY'
		WHEN 2 THEN 'USD'
		WHEN 3 THEN 'HKD'
		WHEN 4 THEN 'EUR'
		END AS
		currencyEnName
		FROM
		tb_fee_manage tfm
		<if test="userId!=null and projectId !=null">
			LEFT JOIN tb_base_user_project tbup
			ON tfm.project_id =
			tbup.project_id
		</if>
		LEFT JOIN tb_base_project tbp
		ON tfm.project_id = tbp.id
		WHERE tfm.state
		= 2
		AND tfm.is_delete = 0
		<if test="userId!=null and projectId !=null">
			AND tbup.user_id = #{userId}
			AND tbup.state = 1
		</if>
		<if test="projectId!=null">
			AND tfm.project_id = #{projectId}
		</if>
		<if test="businessUnitId !=null">
			AND tbp.business_unit_id = #{businessUnitId}
		</if>
		<if test="startPlaceDate!=null and startPlaceDate!=''">
			AND DATE_FORMAT(tfm.create_at, '%Y-%m-%d') &gt;=
			#{startPlaceDate}
		</if>
		<if test="endPlaceDate!=null and endPlaceDate!=''">
			AND DATE_FORMAT(tfm.create_at, '%Y-%m-%d') &lt;=
			#{endPlaceDate}
		</if>
		<if test="startStatisticsDate!=null and startStatisticsDate!=''">
			AND DATE_FORMAT(tfm.date, '%Y-%m-%d') &gt;=
			#{startStatisticsDate}
		</if>
		<if test="endStatisticsDate!=null and endStatisticsDate!=''">
			AND DATE_FORMAT(tfm.date, '%Y-%m-%d') &lt;=
			#{endStatisticsDate}
		</if>
		<if test="orderNo!=null and orderNo!=''">
			AND tfm.fee_manage_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="bizType!=null">
			AND tbp.biz_type = #{bizType}
		</if>
		<if test="bizManagerId!=null">
			AND tbp.biz_special_id = #{bizManagerId}
		</if>
		<if test="departmentId!=null">
			<foreach collection="departmentId" item="dId"
				open="AND tfm.department_id in(" separator="," close=")">
				${dId}
			</foreach>
		</if>
		<if test="manageFeeDepartmentId!=null">
			<foreach collection="manageFeeDepartmentId" item="dId"
				open="AND tfm.department_id in(" separator="," close=")">
				${dId}
			</foreach>
		</if>

		UNION ALL

		SELECT
		tbd.id,
		tbd.project_id projectId,
		tbd.remark remark,
		tbd.warehouse_id AS warehouseId,
		tbp.biz_special_id AS bizManagerId,
		tbp.department_id AS departmentId,
		(SELECT tbs.id FROM tb_base_subject
		tbs
		WHERE tbs.id = tbd.customer_id AND tbs.subject_type &amp; 1 = 1)
		customerId,
		tbp.biz_type AS bizType,
		tbd.bill_no orderNo,
		(SELECT
		tbos.bill_no FROM tb_bill_out_store tbos
		WHERE tbos.bill_delivery_id =
		tbd.id AND tbos.is_delete = 0) billNo,
		'4' AS
		billType,
		tbdd.goods_id AS
		productNo,
		IF((SELECT tfab.is_home FROM
		tb_fi_account_book tfab
		WHERE
		tfab.busi_unit = tbp.business_unit_id LIMIT 0, 1)=1,
		(SELECT tax_rate
		FROM tb_base_goods tbg WHERE tbg.id = tbdd.goods_id), 0) taxRate,
		(SELECT tfab.is_home FROM tb_fi_account_book tfab
		WHERE tfab.busi_unit
		= tbp.business_unit_id LIMIT 0, 1) isHome,
		SUM(tbdd.required_send_num)
		AS num,
		SUM(tbdd.required_send_num *
		tbdd.required_send_price) AS
		saleAmount,
		0 AS recAmount,
		0 AS payAmount,
		0 AS diffAmount,
		IFNULL(tbdd.required_send_num * tbdd.cost_price, 0) AS
		purchaseCost,
		0
		AS fundCost,
		tbd.required_send_date AS placeDate,
		tbos.deliver_time AS
		statisticsDate,
		tbd.currency_type AS currencyType,
		CASE
		tbd.currency_type
		WHEN 1 THEN 'CNY'
		WHEN 2 THEN 'USD'
		WHEN 3 THEN
		'HKD'
		WHEN 4 THEN 'EUR'
		END AS currencyEnName
		FROM tb_bill_delivery_dtl
		tbdd
		INNER JOIN tb_bill_delivery tbd
		ON tbdd.bill_delivery_id = tbd.id
		INNER
		JOIN tb_bill_out_store tbos
		ON tbos.bill_delivery_id = tbd.id
		<if test="userId!=null">
			INNER JOIN tb_base_user_project tbup
			ON tbd.project_id =
			tbup.project_id
		</if>
		INNER JOIN tb_base_project tbp
		ON tbd.project_id = tbp.id
		WHERE
		tbd.status = 5
		AND tbd.is_delete = 0
		AND tbos.is_delete = 0
		<if test="userId!=null">
			AND tbup.user_id = #{userId}
			AND tbup.state = 1
		</if>
		<if test="projectId!=null">
			AND tbd.project_id = #{projectId}
		</if>
		<if test="businessUnitId !=null">
			AND tbp.business_unit_id = #{businessUnitId}
		</if>
		<if test="startPlaceDate!=null and startPlaceDate!=''">
			AND DATE_FORMAT(tbd.required_send_date, '%Y-%m-%d') &gt;=
			#{startPlaceDate}
		</if>
		<if test="endPlaceDate!=null and endPlaceDate!=''">
			AND DATE_FORMAT(tbd.required_send_date, '%Y-%m-%d') &lt;=
			#{endPlaceDate}
		</if>
		<if test="isSchedule!=null and isSchedule==1">
			<if test="startSystemDeliverTime!=null and startSystemDeliverTime!=''">
				AND DATE_FORMAT(tbos.system_deliver_time, '%Y-%m-%d')
				&gt;= #{startSystemDeliverTime}
			</if>
			<if test="endSystemDeliverTime!=null and endSystemDeliverTime!=''">
				AND DATE_FORMAT(tbos.system_deliver_time, '%Y-%m-%d')
				&lt;= #{endSystemDeliverTime}
			</if>
		</if>
		<if test="isSchedule!=null and isSchedule==0">
			<if test="startStatisticsDate!=null and startStatisticsDate!=''">
				AND DATE_FORMAT(tbos.deliver_time, '%Y-%m-%d') &gt;=
				#{startStatisticsDate}
			</if>
			<if test="endStatisticsDate!=null and endStatisticsDate!=''">
				AND DATE_FORMAT(tbos.deliver_time, '%Y-%m-%d') &lt;=
				#{endStatisticsDate}
			</if>
		</if>
		<if test="orderNo!=null and orderNo!=''">
			AND tbd.bill_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="bizType!=null">
			AND tbp.biz_type = #{bizType}
		</if>
		<if test="bizManagerId!=null">
			AND tbp.biz_special_id = #{bizManagerId}
		</if>
		<if test="departmentId!=null">
			<foreach collection="departmentId" item="dId"
				open="AND tbp.department_id in(" separator="," close=")">
				${dId}
			</foreach>
		</if>
		GROUP BY tbdd.id

		<if test="searchProfitReport!=null and searchProfitReport==1">
			UNION ALL

			SELECT
			trf.id,
			trf.project_id AS projectId,
			NULL AS remark,
			NULL AS warehouseId,
			tbp.biz_special_id AS bizManagerId,
			trf.department_id AS departmentId,
			NULL AS customerId,
			tbp.biz_type AS
			bizType,
			NULL AS orderNo,
			NULL AS billNo,
			'5' AS billType,
			'资金成本' AS
			productNo,
			NULL AS taxRate,
			NULL AS isHome,
			0 AS num,
			0 AS saleAmount,
			0
			AS recAmount,
			0 AS payAmount,
			0 AS diffAmount,
			0 AS purchaseCost,
			trf.fund_cost AS fundCost,
			LAST_DAY(CONCAT(SUBSTRING(trf.issue, 1, 4),
			SUBSTRING(trf.issue, 5, 2), '01')) AS placeDate,
			LAST_DAY(CONCAT(SUBSTRING(trf.issue, 1, 4), SUBSTRING(trf.issue, 5,
			2), '01')) AS statisticsDate,
			trf.currency_type AS currencyType,
			CASE
			trf.currency_type
			WHEN 1 THEN 'CNY'
			WHEN 2 THEN 'USD'
			WHEN 3 THEN 'HKD'
			WHEN 4 THEN 'EUR'
			END AS currencyEnName
			FROM tb_report_fund trf
			<if test="userId!=null">
				INNER JOIN tb_base_user_project tbup
				ON trf.project_id =
				tbup.project_id
			</if>
			INNER JOIN tb_base_project tbp
			ON trf.project_id = tbp.id
			WHERE 1=1
			<if test="userId!=null">
				AND tbup.user_id = #{userId}
				AND tbup.state = 1
			</if>
			<if test="projectId">
				AND trf.project_id = #{projectId}
			</if>
			<if test="bizManagerId">
				AND tbp.biz_special_id = #{bizManagerId}
			</if>
			<if test="businessUnitId">
				AND tbp.business_unit_id = #{businessUnitId}
			</if>
			<if test="bizType!=null">
				AND tbp.biz_type = #{bizType}
			</if>
			<if test="departmentId!=null">
				<foreach collection="departmentId" item="dId"
					open="AND tbp.department_id in(" separator="," close=")">
					${dId}
				</foreach>
			</if>
			<if test="startPlaceDate!=null and startPlaceDate!=''">
				AND trf.issue &gt;= DATE_FORMAT(#{startPlaceDate},
				'%Y%m')
			</if>
			<if test="endPlaceDate!=null and endPlaceDate!=''">
				AND trf.issue &gt;= DATE_FORMAT(#{endPlaceDate}, '%Y%m')
			</if>
			<if test="startStatisticsDate!=null and startStatisticsDate!=''">
				AND trf.issue &gt;= DATE_FORMAT(#{startStatisticsDate},
				'%Y%m')
			</if>
			<if test="endStatisticsDate!=null and endStatisticsDate!=''">
				AND trf.issue &lt;= DATE_FORMAT(#{endStatisticsDate},
				'%Y%m')
			</if>
			<if test="orderNo!=null and orderNo!=''">
				AND trf.id is null
			</if>
		</if>

		) result
		WHERE 1=1
		<if test="billType!=null">
			AND result.billType = #{billType}
		</if>
		<if test="excludeProjectIdList!=null">
			<foreach collection="excludeProjectIdList" item="pId"
				open="AND (result.projectId IS NULL OR result.projectId not in("
				separator="," close="))">
				${pId}
			</foreach>
		</if>
		) s
		) report where report.billType is not null
	</sql>

	<select id="queryOrderProfitReportResultsByCon" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="com.scfs.domain.report.entity.OrderProfitReport">
		select * from (
		<include refid="order_profit_report_sql" />
		) tmp order by tmp.projectId, tmp.bizType, tmp.billType, tmp.placeDate
	</select>

	<select id="queryOrderProfitReportCountByCon" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="java.lang.Integer">
		select count(*) from (
		<include refid="order_profit_report_sql" />
		) tmp
	</select>

	<select id="querySumOrderProfitReportByCon" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="com.scfs.domain.report.entity.OrderProfitReportSum">
		select SUM(num) num, SUM(saleAmount) saleAmount, SUM(serviceAmount)
		serviceAmount, SUM(compositeTaxAmount) compositeTaxAmount,
		SUM(purchaseCost) purchaseCost, SUM(fundCost) fundCost,
		SUM(warehouseAmount) warehouseAmount,
		SUM(marketAmount) marketAmount,
		SUM(financeAmount) financeAmount, SUM(manageAmount)
		manageAmount,
		SUM(manualAmount) manualAmount, SUM(profitAmount) profitAmount,
		currencyType
		from (
		<include refid="order_profit_report_sql" />
		) tmp group by tmp.currencyType
	</select>


	<select id="queryProfitReportMounthResultsByCon" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="com.scfs.domain.report.entity.MounthProfitReport">
		SELECT
		r.project_id AS projectId,
		p.biz_type AS bizType,
		r.issue,
		SUM(r.sale_amount) + SUM(r.service_amount) - SUM(composite_tax_amount)
		AS saleAmount,
		SUM(r.sale_amount) + SUM(r.service_amount) -
		SUM(composite_tax_amount) - SUM(r.purchase_cost) AS saleBlanceAmount,
		SUM(r.manage_amount) + SUM(r.manual_amount) AS manageAmount,
		SUM(r.sale_amount) + SUM(r.service_amount) - SUM(composite_tax_amount)
		- SUM(r.purchase_cost) - SUM(r.fund_cost) AS bizManagerAmount,
		SUM(r.sale_amount) + SUM(r.service_amount) -
		SUM(composite_tax_amount)- SUM(r.purchase_cost) - SUM(r.fund_cost) -
		SUM(r.warehouse_amount) - SUM(r.manage_amount)-SUM(r.manual_amount) AS
		profitAmount,
		SUM(r.warehouse_amount) AS warehouseAmount,
		SUM(r.service_amount) AS serviceAmount,
		SUM(r.purchase_cost) AS
		purchaseCost,
		SUM(r.fund_cost) AS fundCost
		FROM
		tb_profit_report r
		LEFT
		JOIN
		tb_base_project p
		ON
		r.project_id = p.id
		WHERE 1 = 1
		AND r.project_id
		IS NOT NULL
		<if test="startStatisticsDate != null and startStatisticsDate !=''">
			and r.issue &gt;=#{startStatisticsDate}
		</if>
		<if test="endStatisticsDate != null and endStatisticsDate !=''">
			and r.issue &lt;=#{endStatisticsDate}
		</if>
		<if test="projectId != null and projectId !=''">
			and r.project_id=#{projectId}
		</if>
		<if test="bizType != null and bizType !=''">
			and p.biz_type=#{bizType}
		</if>
		<if test="excludeProjectIdList!=null">
			<foreach collection="excludeProjectIdList" item="pId"
				open="AND (r.project_id IS NULL OR r.project_id not in(" separator=","
				close="))">
				${pId}
			</foreach>
		</if>
		GROUP BY r.issue, r.project_id
		ORDER BY r.issue
	</select>


	<select id="queryMountProfitReportCountByCon" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM (
		SELECT
		r.project_id AS projectId,
		p.biz_type as
		bizType,
		r.issue,
		SUM(r.sale_amount) +
		SUM(r.service_amount) AS
		saleAmount,
		SUM(r.sale_amount) +
		SUM(r.service_amount) -
		SUM(r.purchase_cost) AS
		saleBlanceAmount,
		SUM(r.manage_amount) +
		SUM(r.manual_amount) AS
		manageAmount,
		SUM(r.sale_amount) +
		SUM(r.service_amount) -
		SUM(r.purchase_cost) -
		SUM(r.fund_cost) AS
		bizManagerAmount,
		SUM(r.sale_amount) +
		SUM(r.service_amount) -
		SUM(r.purchase_cost) -
		SUM(r.fund_cost) -
		SUM(r.warehouse_amount) -
		SUM(r.manage_amount)-SUM(r.manual_amount) AS
		profitAmount,

		SUM(r.warehouse_amount) AS warehouseAmount,
		SUM(r.service_amount) AS
		serviceAmount,
		SUM(r.purchase_cost) AS
		purchaseCost,
		SUM(r.fund_cost) AS
		fundCost
		FROM
		tb_profit_report r
		LEFT
		JOIN
		tb_base_project p
		ON
		r.project_id
		= p.id
		WHERE 1 = 1
		AND r.project_id IS NOT NULL
		<if test="startStatisticsDate != null and startStatisticsDate !=''">
			and r.issue &gt;=#{startStatisticsDate}
		</if>
		<if test="endStatisticsDate != null and endStatisticsDate !=''">
			and r.issue &lt;=#{endStatisticsDate}
		</if>
		<if test="projectId != null and projectId !=''">
			and r.project_id=#{projectId}
		</if>
		<if test="bizType != null and bizType !=''">
			and p.biz_type=#{bizType}
		</if>
		<if test="excludeProjectIdList!=null">
			<foreach collection="excludeProjectIdList" item="pId"
				open="AND (r.project_id IS NULL OR r.project_id not in(" separator=","
				close="))">
				${pId}
			</foreach>
		</if>
		GROUP BY r.issue, r.project_id
		ORDER BY r.issue
		) r
	</select>

	<!-- 获取销售总额 -->
	<select id="querySaleAmount" parameterType="com.scfs.domain.report.req.OrderProfitReportReqDto"
		resultType="com.scfs.domain.report.entity.OrderProfitReport">
		SELECT
		SUM(r.sale_amount) AS saleAmount
		FROM
		tb_profit_report r
		LEFT
		JOIN
		tb_base_project p
		ON
		r.project_id
		= p.id
		WHERE 1 = 1
		AND r.project_id IS
		NOT NULL
		<if test="startStatisticsDate != null and startStatisticsDate !=''">
			and r.issue &gt;=#{startStatisticsDate}
		</if>
		<if test="endStatisticsDate != null and endStatisticsDate !=''">
			and r.issue &lt;=#{endStatisticsDate}
		</if>
		<if test="projectId != null and projectId !=''">
			and r.project_id=#{projectId}
		</if>
	</select>
</mapper>