<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scfs.dao.logistics.BillOutStorePickDtlDao">
	<resultMap id="BaseResultMap"
		type="com.scfs.domain.logistics.entity.BillOutStorePickDtl">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="bill_out_store_id" jdbcType="INTEGER" property="billOutStoreId" />
		<result column="bill_out_store_dtl_id" jdbcType="INTEGER"
			property="billOutStoreDtlId" />
		<result column="po_id" jdbcType="INTEGER" property="poId" />
		<result column="po_dtl_id" jdbcType="INTEGER" property="poDtlId" />
		<result column="goods_id" jdbcType="INTEGER" property="goodsId" />
		<result column="pickup_num" jdbcType="DECIMAL" property="pickupNum" />
		<result column="send_price" jdbcType="DECIMAL" property="sendPrice" />
		<result column="stl_id" jdbcType="INTEGER" property="stlId" />
		<result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
		<result column="goods_status" jdbcType="TINYINT" property="goodsStatus" />
		<result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
		<result column="po_price" jdbcType="DECIMAL" property="poPrice" />
		<result column="accept_time" jdbcType="TIMESTAMP" property="acceptTime" />
		<result column="origin_accept_time" jdbcType="TIMESTAMP"
			property="originAcceptTime" />
		<result column="receive_date" jdbcType="DATE" property="receiveDate" />
		<result column="currency_type" jdbcType="INTEGER" property="currencyType" />
		<result column="exchange_rate" jdbcType="DECIMAL" property="exchangeRate" />
		<result column="customer_id" jdbcType="INTEGER" property="customerId" />
		<result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="creator_id" jdbcType="INTEGER" property="creatorId" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
		<result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
		<result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
		<result column="pay_price" jdbcType="DECIMAL" property="payPrice" />
		<result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
		<result column="return_num" jdbcType="DECIMAL" property="returnNum" />
		<result column="po_return_id" jdbcType="INTEGER" property="poReturnId" />
		<result column="po_return_dtl_id" jdbcType="INTEGER" property="poReturnDtlId" />
		<result column="pay_rate" jdbcType="DECIMAL" property="payRate" />
		<result column="pay_real_currency" jdbcType="TINYINT" property="payRealCurrency" />
	</resultMap>
	<resultMap id="ExtResultMap"
		type="com.scfs.domain.logistics.entity.BillOutStorePickDtlExt"
		extends="BaseResultMap">
		<result column="t_bill_no" jdbcType="VARCHAR" property="tBillNo" />
		<result column="t_bill_type" jdbcType="TINYINT" property="tBillType" />
		<result column="t_affiliate_no" jdbcType="VARCHAR" property="tAffiliateNo" />
		<result column="t_project_id" jdbcType="INTEGER" property="tProjectId" />
		<result column="t_supplier_id" jdbcType="INTEGER" property="tSupplierId" />
		<result column="t_warehouse_id" jdbcType="INTEGER" property="tWarehouseId" />
		<result column="t_customer_id" jdbcType="INTEGER" property="tCustomerId" />
		<result column="t_receive_warehouse_id" jdbcType="INTEGER"
			property="tReceiveWarehouseId" />
		<result column="t_status" jdbcType="TINYINT" property="tStatus" />
		<result column="t_required_send_date" jdbcType="DATE"
			property="tRequiredSendDate" />
		<result column="t_send_date" jdbcType="DATE" property="tSendDate" />
		<result column="t_bill_delivery_id" jdbcType="INTEGER"
			property="tBillDeliveryId" />
		<result column="t_send_num" jdbcType="DECIMAL" property="tSendNum" />
		<result column="t_send_amount" jdbcType="DECIMAL" property="tSendAmount" />
		<result column="t_pickup_num" jdbcType="DECIMAL" property="tPickupNum" />
		<result column="t_pickup_amount" jdbcType="DECIMAL" property="tPickupAmount" />
		<result column="t_cost_amount" jdbcType="DECIMAL" property="tCostAmount" />
		<result column="t_po_amount" jdbcType="DECIMAL" property="tPoAmount" />
		<result column="t_customer_address_id" jdbcType="INTEGER"
			property="tCustomerAddressId" />
		<result column="t_transfer_mode" jdbcType="TINYINT" property="tTransferMode" />
		<result column="t_deliver_id" jdbcType="INTEGER" property="tDeliverId" />
		<result column="t_deliverer" jdbcType="VARCHAR" property="tDeliverer" />
		<result column="t_deliver_time" jdbcType="TIMESTAMP" property="tDeliverTime" />
		<result column="t_currency_type" jdbcType="INTEGER" property="tCurrencyType" />
		<result column="t_exchange_rate" jdbcType="DECIMAL" property="tExchangeRate" />
		<result column="t_reason_type" jdbcType="INTEGER" property="tReasonType" />
		<result column="t_wms_status" jdbcType="INTEGER" property="tWmsStatus" />
		<result column="t_remark" jdbcType="VARCHAR" property="tRemark" />
		<result column="t_print_num" jdbcType="INTEGER" property="tPrintNum" />
	</resultMap>

	<sql id="Base_Column_List">
		id, bill_out_store_id, bill_out_store_dtl_id, po_id,
		po_dtl_id, goods_id,
		pickup_num, send_price, stl_id, batch_no,
		goods_status, cost_price, po_price, accept_time, origin_accept_time,
		receive_date,
		currency_type, exchange_rate, customer_id, supplier_id,
		remark, creator_id, creator, create_at, update_at, pay_price,
		pay_time,
		return_num,
		po_return_id,
		po_return_dtl_id,pay_rate,pay_real_currency
	</sql>
	<sql id="Alias_Base_Column_List">
		tbospd.id, tbospd.bill_out_store_id,
		tbospd.bill_out_store_dtl_id, tbospd.po_id,
		tbospd.po_dtl_id,tbospd.goods_id, tbospd.pickup_num,
		tbospd.send_price, tbospd.stl_id, tbospd.batch_no,
		tbospd.goods_status, tbospd.cost_price, tbospd.po_price,
		tbospd.accept_time, tbospd.origin_accept_time, tbospd.receive_date,
		tbospd.currency_type, tbospd.exchange_rate, tbospd.customer_id,
		tbospd.supplier_id,
		tbospd.remark, tbospd.creator_id, tbospd.creator,
		tbospd.create_at,
		tbospd.update_at, tbospd.pay_price, tbospd.pay_time,
		tbospd.return_num,
		tbospd.po_return_id,
		tbospd.po_return_dtl_id,tbospd.pay_rate,tbospd.pay_real_currency
	</sql>
	<sql id="BillOutStore_Alias_Base_Column_List">
		tbos.bill_no t_bill_no, tbos.bill_type t_bill_type,
		tbos.affiliate_no
		t_affiliate_no, tbos.project_id t_project_id,
		tbos.warehouse_id t_warehouse_id, tbos.customer_id t_customer_id,
		tbos.receive_warehouse_id t_receive_warehouse_id,
		tbos.status t_status,
		tbos.required_send_date t_required_send_date,
		tbos.send_date
		t_send_date, tbos.bill_delivery_id t_bill_delivery_id,
		tbos.send_num
		t_send_num, tbos.send_amount t_send_amount,
		tbos.pickup_num
		t_pickup_num, tbos.pickup_amount t_pickup_amount,
		tbos.cost_amount
		t_cost_amount, tbos.po_amount t_po_amount,
		tbos.customer_address_id
		t_customer_address_id, tbos.transfer_mode
		t_transfer_mode,
		tbos.deliver_id t_deliver_id, tbos.deliverer t_deliverer,
		tbos.deliver_time
		t_deliver_time, tbos.currency_type t_currency_type,
		tbos.exchange_rate t_exchange_rate, tbos.reason_type t_reason_type,
		tbos.wms_status
		t_wms_status, tbos.remark t_remark,
		tbos.print_num
		t_print_num
	</sql>

	<sql id="condition">
		<if test="id!=null">
			AND tbospd.id = #{id}
		</if>
		<if test="billOutStoreId!=null">
			AND tbospd.bill_out_store_id = #{billOutStoreId}
		</if>
	</sql>

	<sql id="bill_out_store_condition">
		<if test="businessUnitId!=null">
			AND tbp.business_unit_id = #{businessUnitId}
		</if>
		<if test="id!=null">
			AND tbos.id = #{id}
		</if>
		<if test="projectId!=null">
			AND tbos.project_id = #{projectId}
		</if>
		<if test="warehouseId!=null">
			AND tbos.warehouse_id = #{warehouseId}
		</if>
		<if test="customerId!=null">
			AND tbos.customer_id = #{customerId}
		</if>
		<if test="startSendDate!=null">
			AND tbos.send_date &gt;= #{startSendDate}
		</if>
		<if test="endSendDate!=null">
			AND tbos.send_date &lt;= #{endSendDate}
		</if>
		<if test="startRequiredSendDate!=null">
			AND tbos.required_send_date &gt;= #{startRequiredSendDate}
		</if>
		<if test="endRequiredSendDate!=null">
			AND tbos.required_send_date &lt;= #{endRequiredSendDate}
		</if>
		<if test="status!=null">
			AND tbos.status = #{status}
		</if>
		<if test="billType!=null">
			AND tbos.bill_type = #{billType}
		</if>
		<if test="billNo!=null and billNo!=''">
			AND tbos.bill_no like CONCAT('%',#{billNo},'%')
		</if>
		<if test="affiliateNo!=null and affiliateNo!=''">
			AND tbos.affiliate_no like CONCAT('%',#{affiliateNo},'%')
		</if>
		<if test="goodsNumber!=null and goodsNumber!=''">
			AND tbg.number like CONCAT('%',#{goodsNumber},'%')
		</if>
		<if test="goodsName!=null and goodsName!=''">
			AND tbg.name like CONCAT('%',#{goodsName},'%')
		</if>
		<if test="goodsType!=null and goodsType!=''">
			AND tbg.type like CONCAT('%',#{goodsType},'%')
		</if>
		<if test="goodsBarCode!=null and goodsBarCode!=''">
			AND tbg.bar_code like CONCAT('%',#{goodsBarCode},'%')
		</if>
	</sql>

	<select id="queryEntityById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_bill_out_store_pick_dtl
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from
		tb_bill_out_store_pick_dtl
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<select id="queryResultsByBillOutStoreId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_bill_out_store_pick_dtl tbospd
		where 1=1
		AND
		tbospd.bill_out_store_id = #{billOutStoreId}
	</select>

	<select id="queryResultsByBillOutStoreDtlId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_bill_out_store_pick_dtl tbospd
		where 1=1
		AND
		tbospd.bill_out_store_dtl_id = #{billOutStoreDtlId}
	</select>

	<insert id="insert"
		parameterType="com.scfs.domain.logistics.entity.BillOutStorePickDtl"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		tb_bill_out_store_pick_dtl (id, bill_out_store_id,
		bill_out_store_dtl_id,
		po_id, po_dtl_id, goods_id,
		pickup_num,
		send_price, stl_id,
		batch_no, goods_status, cost_price,
		po_price,
		accept_time, origin_accept_time, receive_date,
		currency_type,
		exchange_rate, customer_id,
		supplier_id, remark, creator_id,
		creator,
		pay_price, pay_time,
		return_num, po_return_id,
		po_return_dtl_id,pay_rate,pay_real_currency)
		values
		(#{id,jdbcType=INTEGER}, #{billOutStoreId,jdbcType=INTEGER},
		#{billOutStoreDtlId,jdbcType=INTEGER},
		#{poId,jdbcType=INTEGER},
		#{poDtlId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
		#{pickupNum,jdbcType=DECIMAL}, #{sendPrice,jdbcType=DECIMAL},
		#{stlId,jdbcType=INTEGER},
		#{batchNo,jdbcType=VARCHAR},
		#{goodsStatus,jdbcType=TINYINT}, #{costPrice,jdbcType=DECIMAL},
		#{poPrice,jdbcType=DECIMAL}, #{acceptTime,jdbcType=TIMESTAMP},
		#{originAcceptTime,jdbcType=TIMESTAMP}, #{receiveDate,jdbcType=DATE},
		#{currencyType,jdbcType=INTEGER}, #{exchangeRate,jdbcType=DECIMAL},
		#{customerId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER},
		#{creator,jdbcType=VARCHAR}, #{payPrice,jdbcType=DECIMAL},
		#{payTime,jdbcType=TIMESTAMP},
		#{returnNum,jdbcType=DECIMAL},
		#{poReturnId,jdbcType=INTEGER}, #{poReturnDtlId,jdbcType=INTEGER},
		#{payRate,jdbcType=DECIMAL},#{payRealCurrency,jdbcType=TINYINT})
	</insert>

	<update id="updateById"
		parameterType="com.scfs.domain.logistics.entity.BillOutStorePickDtl">
		update tb_bill_out_store_pick_dtl
		<set>
			<if test="billOutStoreId != null">
				bill_out_store_id = #{billOutStoreId,jdbcType=INTEGER},
			</if>
			<if test="billOutStoreDtlId != null">
				bill_out_store_dtl_id =
				#{billOutStoreDtlId,jdbcType=INTEGER},
			</if>
			<if test="poId != null">
				po_id = #{poId,jdbcType=INTEGER},
			</if>
			<if test="poDtlId != null">
				po_dtl_id = #{poDtlId,jdbcType=INTEGER},
			</if>
			<if test="goodsId != null">
				goods_id = #{goodsId,jdbcType=INTEGER},
			</if>
			<if test="pickupNum != null">
				pickup_num = #{pickupNum,jdbcType=DECIMAL},
			</if>
			<if test="sendPrice != null">
				send_price = #{sendPrice,jdbcType=DECIMAL},
			</if>
			<if test="stlId != null">
				stl_id = #{stlId,jdbcType=INTEGER},
			</if>
			<if test="batchNo != null">
				batch_no = #{batchNo,jdbcType=VARCHAR},
			</if>
			<if test="goodsStatus != null">
				goods_status = #{goodsStatus,jdbcType=TINYINT},
			</if>
			<if test="costPrice != null">
				cost_price = #{costPrice,jdbcType=DECIMAL},
			</if>
			<if test="poPrice != null">
				po_price = #{poPrice,jdbcType=DECIMAL},
			</if>
			<if test="acceptTime != null">
				accept_time = #{acceptTime,jdbcType=TIMESTAMP},
			</if>
			<if test="originAcceptTime != null">
				origin_accept_time =
				#{originAcceptTime,jdbcType=TIMESTAMP},
			</if>
			<if test="receiveDate != null">
				receive_date = #{receiveDate,jdbcType=DATE},
			</if>
			<if test="currencyType != null">
				currency_type = #{currencyType,jdbcType=INTEGER},
			</if>
			<if test="exchangeRate != null">
				exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				supplier_id = #{supplierId,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				creator_id = #{creatorId,jdbcType=INTEGER},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="payPrice != null">
				pay_price = #{payPrice,jdbcType=DECIMAL},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="returnNum != null">
				return_num = #{returnNum,jdbcType=DECIMAL},
			</if>
			<if test="poReturnId != null">
				po_return_id = #{poReturnId,jdbcType=INTEGER},
			</if>
			<if test="poReturnDtlId != null">
				po_return_dtl_id = #{poReturnDtlId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteByBillOutStoreDtlId" parameterType="java.lang.Integer">
		delete from
		tb_bill_out_store_pick_dtl
		where bill_out_store_dtl_id =
		#{billOutStoreDtlId,jdbcType=INTEGER}
	</delete>

	<select id="querySumByBillOutStoreDtlId"
		resultType="com.scfs.domain.logistics.entity.BillOutStorePickDtlSum"
		parameterType="com.scfs.domain.logistics.entity.BillOutStorePickDtl">
		select IFNULL(sum(pickup_num), 0) pickupNum,
		IFNULL(sum(ROUND(cost_price*pickup_num, 2)), 0) as costAmount,
		IFNULL(sum(ROUND(po_price*pickup_num, 2)), 0) as poAmount
		from
		tb_bill_out_store_pick_dtl
		where bill_out_store_dtl_id =
		#{billOutStoreDtlId,jdbcType=INTEGER}
	</select>

	<select id="queryCostPriceByBillOutStoreId" parameterType="java.lang.Integer"
		resultType="com.scfs.domain.logistics.entity.BillOutStoreTaxGroupCostPrice">
		select sum(ROUND(pickup_num*cost_price, 2)) as
		costPriceAmount ,
		goods.tax_rate as taxRate
		from
		tb_bill_out_store_pick_dtl pick
		left join tb_base_goods goods on
		goods.id = pick.goods_id
		where pick.bill_out_store_id =
		#{billOutStoreId}
		group by goods.tax_rate
	</select>

	<select id="queryCostPriceByOutStoreId" parameterType="java.lang.Integer"
		resultType="java.math.BigDecimal">
		select IFNULL(sum(ROUND(pickup_num*cost_price, 2)),0) as
		costPrice
		from tb_bill_out_store_pick_dtl pick
		where
		pick.bill_out_store_id = #{billOutStoreId}
	</select>

	<!-- 导出进货明细查询 -->
	<select id="queryResultsByBillOutStoreCon"
		parameterType="com.scfs.domain.logistics.dto.req.BillOutStoreSearchReqDto"
		resultMap="ExtResultMap">
		<include refid="queryResultsByBillOutStoreCon_sql" />
	</select>

	<sql id="queryResultsByBillOutStoreCon_sql">
		select DISTINCT
		<include refid="Alias_Base_Column_List" />
		,
		<include refid="BillOutStore_Alias_Base_Column_List" />
		from tb_bill_out_store_pick_dtl tbospd
		left join tb_bill_out_store tbos
		on tbospd.bill_out_store_id = tbos.id
		left join tb_base_goods tbg
		on
		tbospd.goods_id = tbg.id
		inner join tb_base_user_project bup
		on
		tbos.project_id = bup.project_id
		inner join tb_base_project tbp
		on
		tbp.id = bup.project_id
		where tbos.is_delete = 0
		<if test="userId!=null">
			AND bup.user_id = #{userId}
			AND bup.state = 1
		</if>
		<include refid="bill_out_store_condition" />
		order by tbospd.id desc
	</sql>

	<select id="queryCountByBillOutStoreCon" resultType="java.lang.Integer"
		parameterType="com.scfs.domain.logistics.dto.req.BillOutStoreSearchReqDto">
		select count(1) from (
		<include refid="queryResultsByBillOutStoreCon_sql" />
		) tmp
	</select>

	<!-- 根据出库ID查询拣货明细 -->
	<select id="queryPickDtlByOutId" parameterType="java.lang.Integer"
		resultType="com.scfs.domain.logistics.entity.BillOutStoreTaxGroupCostPrice">
		select IFNULL(pick.pickup_num,0) as
		pickupNum,IFNULL(pick.send_price,0) as
		sendPrice,IFNULL(pick.send_price,0) as costPrice,
		sum(IFNULL(pick.pickup_num,0) * IFNULL(pick.send_price,0)) as
		sendPriceAmount,sum(IFNULL(pick.pickup_num,0) *
		IFNULL(pick.cost_price,0)) as costPriceAmount,goods.tax_rate as
		taxRate
		from tb_bill_out_store_pick_dtl pick
		left join tb_base_goods
		goods on goods.id = pick.goods_id
		where pick.bill_out_store_id =
		#{billOutStoreId}
		group by goods.tax_rate
	</select>
</mapper>