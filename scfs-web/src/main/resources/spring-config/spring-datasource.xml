<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
			 http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop.xsd
          ">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="2" />
		<property name="maxActive" value="30" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<!--<property name="filters" value="stat" /> -->
	</bean>

	<!--jdbc事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" p:defaultTimeout="3" />
	<!--注解事务管理开启 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" mode="proxy" />

	<!--切面事务管理 -->
	<!--JDBC事务管理 -->
	<tx:advice id="myTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="myTxPointcut"
			expression="com.scfs.dao.tx.TxPointcuts.txMarkPointcut()" />
		<aop:advisor advice-ref="myTxAdvice" pointcut-ref="myTxPointcut"
			order="200" />
	</aop:config>
</beans>